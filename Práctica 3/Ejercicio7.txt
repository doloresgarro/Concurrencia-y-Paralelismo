7. Se debe simular una maratón con C corredores donde en la llegada 
hay UNA máquinas expendedoras de agua con capacidad para 20 botellas. 
Además existe un repositor encargado de reponer las botellas de la máquina. 
Cuando los C corredores han llegado al inicio comienza la carrera. 
Cuando un corredor termina la carrera se dirigen a la máquina expendedora, 
espera su turno (respetando el orden de llegada), saca una botella y se retira.
Si encuentra la máquina sin botellas, le avisa al repositor para que cargue
nuevamente la máquina con 20 botellas; espera a que se haga la recarga; saca 
una botella y se retira.
Nota: maximizar la concurrencia; mientras se reponen las botellas se debe
permitir que otros corredores se encolen


Monitor Carrera {
	cond inicio, espera, cola;
	int corredores = 0;
	bool libre = true;

	process llegada() { 	
		corredores ++;
		if (corredores < C) {	// si no llegaron a la meta espera 
			wait(espera);
		}
		signal_all(inicio);	// sino, despierta a todos	
	}
		

	process usoDeMaquina() {
		if (not libre) {	
			espera ++;
			wait(cola);
		} else libre = false;
	}
	

	process finalizarUsoMaquina() {
		if (espera > 0) {
			espera --;
			signal(cola);
		} else libre = true;
		
	}


}

Monitor Maquina {
	botellas = 20;
	cond reponer, espera;

	process utilizar() {
		if (botellas <> 0) {
			botellas --;
			entregarBotella();
		} else {
			signal(reponer);
			wait(esperar);	// espera que repositor recargue
		}
	}



	process reponerBotellas() {
		if (botellas > 0) {
			wait(reponer);	// espera que le indiquen que recargue
		}
		botellas = 20;
		signal(espera);		// avisa que ya recargó
	}
}


process Corredor[id: 0..C-1] {
	Carrera.llegada();
	Carrera.usoDeMaquina();
	Maquina.utilizar();
	Carrera.finalizarUsoMaquina();
}

process Repositor {
	Maquina.reponerBotellas();
}