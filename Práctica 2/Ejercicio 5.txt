5. Se debe simular una maratón con C corredores donde en la llegada hay UNA 
máquinas expendedoras de agua con capacidad para 20 botellas.
Además existe un repositor encargado de reponer las botellas de la máquina. 
Cuando los C corredores han llegado al inicio comienza la carrera. 

Cuando un corredor termina la carrera se dirigen a la máquina expendedora, 
espera su turno (respetando el orden de llegada), saca una botella y se retira. 
Si encuentra la máquina sin botellas, le avisa al repositor para que cargue 
nuevamente la máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira.
Nota: maximizar la concurrencia; mientras se reponen las botellas se debe 
permitir que otros corredores se encolen. 

int corredores = 0, latas = 20;
sem mutex = 1, mutex_c = 1, barrera = 0, espera[C] = ([C] 0);
sem reponer = 0, listo = 0;
bool libre = true;
Cola c; 

Process Corredor [id: 1..C] {
	int i, aux; 
	P(mutex);
	corredor = corredor + 1;

	if (contador == C) {
		for i = 1..C V(barrera); // despierta para que empiecen	
	}
	V(mutex);
	
	P(barrera);			// empieza la carrera
	
	P(mutex_c)
	if (not libre) 
		push(c, id);	
		V(mutex_c);
		P(espera[id]);
	} else 
		libre = false;
		V(mutex_c);	
	}
	
	if (botellas == 0) {
		V(reponer);
		P(listo);
	}

	botellas --;			// toma botella
	P(mutex_c);
	if (empty(c)) libre = true;
	else {
		pop(c, aux);
		V(espera[aux]);
	}
}

Process Repositor {
	while (true) {
		P(reponer);
		botellas = 20;
		V(listo);
	}

}
