4. Existen N personas que deben fotocopiar un documento cada una. Resolver cada ítem usando semáforos:
a) Implemente una solución suponiendo que existe una única fotocopiadora compartida por todas las personas, y las mismas la deben usar de a una persona a la vez, sin importar el orden. 

Existe una función Fotocopiar() llamada por la persona que simula el uso de la fotocopiadora. Sólo se deben usar los procesos que representan a las Personas.

sem mutex = 1;

Process Persona [id: 1..N] {
	P(mutex);
	Fotocopiar();
	V(mutex);
}

b) Modifique la solución de (a) para el caso en que se deba respetar el orden de llegada.

Cola c;
sem mutex = 1, espera[N] = ([N] 0);

Process Persona [id: 1..N] {
	int aux;
	P(mutex);
	if (libre) {
		libre = false;
		V(mutex);
	} else {
		push(C, id); 
		V(mutex);
		P(espera[id]);
	}

	Fotocopiar();

	P(mutex); 
	if (empty(c))
		libre = true;
	else {
		pop(c, aux);
		V(espera[aux]);
	}
	V(mutex);
}

c) Modifique la solución de (b) para el caso en que se deba dar prioridad de acuerdo a la edad de cada persona (cuando la fotocopiadora está libre la debe usar la persona de mayor edad entre las que estén esperando para usarla).

Cola colaEspecial;
sem mutex = 1, espera[N] = ([N] 0);

Process Persona [id: 1..N] {
	int aux, edad = ...;
	P(mutex);
	if (libre) {
		libre = false;
		V(mutex);
	} else {
		push(C, id, edad); 
		V(mutex);
		P(espera[id]);
	}

	Fotocopiar();

	P(mutex); 
	if (empty(c))
		libre = true;
	else {
		pop(c, aux);
		V(espera[aux]);
	}
	V(mutex);
}


d) Modifique la solución de (a) para el caso en que se deba respetar estrictamente el orden dado por el identificador del proceso (la persona X no puede usar la fotocopiadora hasta que no haya terminado de usarla la persona X-1).

sem espera[N] = ([N] 0);
 
Process Persona [id: 1..N] {
	P(espera[id]);
	Fotocopiar();
	V(espera[id+1]);
}


e) Modifique la solución de (b) para el caso en que además haya un Empleado 
que le indica a cada persona cuando debe usar la fotocopiadora.

Cola c;
sem mutex = 1, pedido = 0, fin = 0, espera[N] = ([N] 0);

Process Empleado {
	while (true) {
		P(pedido);
		P(mutex);
		pop(c, idP);
		V(mutex);
		V(espera[idP]);
		P(fin);
	}	
}

Process Persona [id: 1..N] {
	P(mutex);
	push(c, id);
	V(mutex);
	V(pedido);
	P(espera[id]);
	Fotocopiar();	
	V(fin);
}


f) Modificar la solución (e) para el caso en que sean 10 fotocopiadoras. El 
empleado le indica a la persona cuando puede usar una fotocopiadora, y cual 
debe usar. 

Cola c, fotocopiadoras;
sem mutex = 1, mutex_f, pedido = 0, espera[N] = ([N] 0);
sem impresoras = 1;
int usarF[N] = ([N] 0);

Process Empleado {
	int cant = 0, idP;
	
	while (cant < N)) {
		P(pedido);	// espera pedido
		P(impresoras);  // impresoras > 0 --> impresoras-1
		
		P(mutex); 
		pop(c, idP);
		V(mutex);
		
		P(mutex_f);
		pop(fotocopiadoras, f);
		V(mutex_f);
		
		usarF[id] = f;
		V(espera[idP]);
		cant = cant + 1;	
	}
}

Process Persona [id: 1..N] {
	P(mutex);
	push(c, id);
	V(mutex);

	V(pedido);

	P(espera[id]);
	Fotocopiar(usarF[id]);	
	
	P(mutex_f);
	push(fotocopiadoras, f);  // ya imprimió, entonces encola 
	V(mutex_f);

	V(impresoras);    	  // libera impresora
}

























