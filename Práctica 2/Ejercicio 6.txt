6. Una empresa de turismo posee 4 combis con capacidad para 25 personas cada una y UN vendedor que vende los pasajes a los clientes de acuerdo al orden de llegada. 
Hay C clientes que al llegar intentan comprar un pasaje para una combi en particular (el cliente conoce este dato); si aún hay lugar en la combi seleccionada se le da el pasaje y se dirige hacia la combi; en caso contrario se retira.
Cada combi espera a que suban los 25 pasajeros, luego realiza el viaje, y cuando llega al destino deja bajar a todos los pasajeros. 
Nota: maximizar la concurrencia; suponga que para cada combi al menos 25 clientes intentarán comprar pasaje

sem mutex = 1, pedido = 0, subir[4] = ([4] 0), bajar[4] = ([4] 0);
sem espera[N] = ([N] 0);
bool pasaje[C]; 
Cola c;

Process Combi [id: 1..4] {
	for i = 1..25 {
		P(subir[id]);
	}
	
	// viaja

	for i = 1..25 {
		V(bajar[id]);
	}
	

}

Process Cliente [id: 1..C] {
	int numC = ...;
	
	P(mutex);
	push(c, id, numC);
	V(mutex);

	V(pedido);	// avisa al vendedor que llegó

	P(espera[id]);
	if (pasaje[id]) {
		V(subir[numC]);	
		P(bajar[id]);	
	} else // se va

}

Process Vendedor {
	int idP, numC;
 	int capacidad[4] = ([4] 25)

	for (i = 1..C){
		P(pedido);	// espera pedido de persona
	
		P(mutex);
		pop(c, idP, numC);
		V(mutex);

		if (capacidad[numc] > 0) {
			pasaje[idP] = true;
			capacidad[numC] --;
		} else
			pasaje = false;
	
		V(espera[idP]) 	// avisa que ya lo atendió
	}
}